#######################
### GENERAL CHANGES ###
#######################

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.config/tmux/tmux.conf

# Mouse support - set to on if you want to use the mouse
set-option -g mouse on
# Older tmux versions:
#setw -g mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on

# set term title
set-option -g set-titles on
set-option -g set-titles-string "#S/#W@#H: #T"

# don't rename windows automatically
set-option -g allow-rename on

# allow renames window title until a title is set
set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{=-10:pane_current_command}'

# display pane title on top of selected
set-option -g pane-border-status top

if-shell -b '[ "$(echo "$tmux_version >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi 'v' send-keys -X begin-selection"

# copy-paste bindings
bind Escape copy-mode
bind P paste-buffer

# GNOME Terminal doesn't support setting the clipboard, so
# it just looks like tmux barfs characters all over the
# screen when you copy a selection.
# http://askubuntu.com/questions/507214/
set -s set-clipboard on

# Enable truecolor/24bit colors
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",alacritty:RGB,*256col*:RGB,gnome*:RGB"

# pane movement
bind-key M command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Easier window navigation Ctrl+Tab and Ctrl+Shift+L/R
bind -n C-S-Left  previous-window
bind -n C-S-Right next-window

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# load design changes
source ~/.config/tmux/design.conf

# Smart pane switching with awareness of Vim splits and fzf.
# See: https://github.com/christoomey/vim-tmux-navigator
not_tmux="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|n?vim?x?)(diff)?|fzf)$'"
bind-key -n 'C-h' if-shell "$not_tmux" "send-keys C-h"  "select-pane -L"
bind-key -n 'C-j' if-shell "$not_tmux" "send-keys C-j"  "select-pane -D"
bind-key -n 'C-k' if-shell "$not_tmux" "send-keys C-k"  "select-pane -U"
bind-key -n 'C-l' if-shell "$not_tmux" "send-keys C-l"  "select-pane -R"

bind-key -n M-Left if-shell "$not_tmux" "send-keys M-Left" "resize-pane -L 3"
bind-key -n M-Down if-shell "$not_tmux" "send-keys M-Down" "resize-pane -D 3"
bind-key -n M-Right if-shell "$not_tmux" "send-keys M-Right" "resize-pane -R 3"
bind-key -n M-Up if-shell "$not_tmux" "send-keys M-Up" "resize-pane -U 3"

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$not_tmux\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$not_tmux\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# disable "release mouse drag to copy and exit copy-mode", ref: https://github.com/tmux/tmux/issues/140
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# let single click do selection clearing for us.

if-shell -b '[ "$(echo "$tmux_version >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection"

# this line changes the default binding of MouseDrag1Pane, the only difference
# is that we use `copy-mode -eM` instead of `copy-mode -M`, so that WheelDownPane
# can trigger copy-mode to exit when copy-mode is entered by MouseDrag1Pane
bind-key -n MouseDrag1Pane   if-shell -F -t = '#{mouse_any_flag}' "if -Ft= '#{pane_in_mode}' 'copy-mode -eM' 'send-keys -M' " "copy-mode -eM"

######################
### PLUGIN OPTIONS ###
######################

### tmux-resurrect settings ###
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'
# Restore pane contents
set -g @resurrect-capture-pane-contents 'on'

set -g @continuum-restore 'on'

### tmux-yank settings ###
set -g @shell_mode 'vi'
set -g @override_copy_command 'yank > #{pane_tty}'
# set -g @yank_action 'copy-pipe-no-clear'
set -g @yank_with_mouse off # or 'on'


###############
### PLUGINS ###
###############

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-logging'

# Save/restore tmux session
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.config/tmux/plugins/tpm/tpm'

